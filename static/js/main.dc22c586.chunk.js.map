{"version":3,"sources":["deviceCheck.tsx","audioRecorder.tsx","home.tsx","videoPlayer.tsx","FaceReco.tsx","App.js","reportWebVitals.js","index.js"],"names":["VideoRecorder","useState","access","recorder","error","stream","setStream","active","available","url","recording","setRecording","chunks","useRef","videoRef","useEffect","getVideo","browser","window","navigator","userAgent","match","console","log","mediaDevices","getUserMedia","audio","video","width","height","then","mediaRecorder","current","muted","setAttribute","srcObject","play","MediaRecorder","mimeType","err","getTracks","onended","onstart","ondataavailable","e","data","push","onstop","a","URL","createObjectURL","catch","className","disabled","onClick","start","stop","controls","id","ref","AudioRecorder","getMediaType","src","tream","alert","mic","Home","navigate","useNavigate","VideoPlayer","require","FaceReco","React","setImageCaptured","captureImage","videos","document","getElementById","canvas","context","getContext","tracker","tracking","ObjectTracker","track","on","event","clearRect","forEach","rect","strokeStyle","lineWidth","strokeRect","x","y","drawImage","dataURI","toDataURL","removeAllListeners","App","Fragment","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dc22c586.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport ReactPlayer from 'react-player'\n\nimport './App.css'\n\nexport default function VideoRecorder() {\n    const [stream, setStream] = useState({\n        access: false,\n        recorder: null,\n        error: \"\"\n    });\n\n    const [recording, setRecording] = useState({\n        active: false,\n        available: false,\n        url: \"\"\n    });\n\n    const chunks = useRef([]);\n    const videoRef = useRef(null);\n\n    useEffect(() => {\n        getVideo();\n    }, [videoRef]);\n\n\n    let browser = window.navigator.userAgent.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || []\n\n    console.log(\"browser\", browser[1])\n    const getMediaType = () => {\n       if(browser[1] === 'Safari') return \"video/mp4\"\n       else return \"video/webm\"\n    }\n\n    const getVideo = () => {\n        navigator.mediaDevices\n            .getUserMedia({ audio: true, video: { width: 563, height: 430 } })\n            .then(stream => {\n                let video = videoRef.current;\n                // @ts-ignore\n                video.muted = true;\n                // @ts-ignore\n                video.setAttribute(\"playsinline\", true);\n                // @ts-ignore\n                video.srcObject = stream;\n                // @ts-ignore\n                video.play();\n                let mediaRecorder;\n                try {\n                    mediaRecorder = new MediaRecorder(stream, {\n                        mimeType: getMediaType()\n                    });\n                } catch (err) {\n                    console.log(err);\n                }\n\n                // @ts-ignore\n                const track = mediaRecorder.stream.getTracks()[0];\n                track.onended = () => console.log(\"ended\");\n\n                // @ts-ignore\n                mediaRecorder.onstart = function () {\n                    console.log(\"Video recording started\");\n                    setRecording({\n                        active: true,\n                        available: false,\n                        url: \"\"\n                    });\n                };\n\n                // @ts-ignore\n                mediaRecorder.ondataavailable = function (e) {\n                    console.log(\"data available\", e.data);\n                    // @ts-ignore\n                    chunks.current.push(e.data);\n                };\n\n                // @ts-ignore\n                mediaRecorder.onstop = async function () {\n                    console.log(\"stopped\");\n\n                    const url = URL.createObjectURL(chunks.current[0]);\n                    console.log('url', url)\n                    chunks.current = [];\n\n                    setRecording({\n                        active: false,\n                        available: true,\n                        url\n                    });\n                };\n\n                setStream({\n                    ...stream,\n                    access: true,\n                    // @ts-ignore\n                    recorder: mediaRecorder\n                });\n\n            })\n            .catch(err => {\n                console.error(\"error:\", err);\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"audio-container\">\n                <br />\n                <br />\n                <br />\n                <button\n                    disabled={recording.active}\n                    // @ts-ignore\n                    onClick={() => !recording.active && stream.recorder.start()}\n                >\n                    Start Recording\n                </button>\n                <br />\n                <br />\n                <br />\n                <button disabled={!recording.active}\n                    onClick={() =>\n                        // @ts-ignore\n                        stream.recorder.stop()}>Stop Recording</button>\n                {/* {recording.available && <video controls src={recording.url} />} */}\n                {recording.available && <ReactPlayer\n                    url={recording.url}\n                    controls={true}\n                    width=\"300px\"\n                    height=\"300px\"\n                    id=\"reactPlayer\"\n                />}\n            </div>\n            <br />\n            <br />\n            <br />\n    \n            {/* <div className=\"control\"><Switch {...label} defaultChecked size=\"small\" /></div> */}\n            <video id=\"video\" ref={videoRef} />\n        </div>\n    );\n\n}\n\n","import React, { useState, useRef } from \"react\";\n\nexport default function AudioRecorder() {\n    const [stream, setStream] = useState({\n        access: false,\n        recorder: null,\n        error: \"\"\n    });\n\n    const [recording, setRecording] = useState({\n        active: false,\n        available: false,\n        url: \"\"\n    });\n\n    const chunks = useRef([]);\n\n    const checkPermission = () => {\n\n        const constraints = {\n            'audio': true\n        }\n\n        navigator.mediaDevices.getUserMedia(constraints)\n            .then(\n                tream => {\n                    alert(\"Got permission\")\n                    getAccess()\n                })\n            .catch(error => {\n                console.error('Error accessing media devices.', error);\n            });\n    }\n\n    // navigator.mediaDevices.enumerateDevices()\n    //     .then(function (devices) {\n    //         devices.forEach(function (device) {\n    //             console.log(device.kind + \": \" + device.label +\n    //                 \" id = \" + device.deviceId);\n    //         });\n    //     })\n    //     .catch(function (err) {\n    //         console.log(err.name + \": \" + err.message);\n    //     });\n\n        let browser = window.navigator.userAgent.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || []\n\n        console.log(\"browser\", browser[1])\n        const getMediaType = () => {\n           if(browser[1] === 'Safari') return \"audio/mp4\"\n           else return \"audio/webm\"\n        }\n\n    function getAccess() {\n        navigator.mediaDevices\n            .getUserMedia({ audio: true })\n            .then((mic) => {\n                let mediaRecorder;\n\n                try {\n                    mediaRecorder = new MediaRecorder(mic, {\n                        mimeType: getMediaType()\n                    });\n                } catch (err) {\n                    console.log(err);\n                }\n\n                // @ts-ignore\n                const track = mediaRecorder.stream.getTracks()[0];\n                track.onended = () => console.log(\"ended\");\n\n                // @ts-ignore\n                mediaRecorder.onstart = function () {\n                    setRecording({\n                        active: true,\n                        available: false,\n                        url: \"\"\n                    });\n                };\n\n                // @ts-ignore\n                mediaRecorder.ondataavailable = function (e) {\n                    console.log(\"data available\");\n                    // @ts-ignore\n                    chunks.current.push(e.data);\n                };\n\n                // @ts-ignore\n                mediaRecorder.onstop = async function () {\n                    console.log(\"stopped\");\n\n                    const url = URL.createObjectURL(chunks.current[0]);\n                    chunks.current = [];\n\n                    setRecording({\n                        active: false,\n                        available: true,\n                        url\n                    });\n                };\n\n                setStream({\n                    ...stream,\n                    access: true,\n                    // @ts-ignore\n                    recorder: mediaRecorder\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                setStream({ ...stream, error });\n            });\n    }\n\n    return (\n        <div className=\"App\">\n            <br />\n            <br />\n            <br />\n            {stream.access ? (\n                <div className=\"audio-container\">\n                    <button\n                        // @ts-ignore\n                        className={recording.active ? \"active\" : null}\n                        disabled={recording.active}\n                        // @ts-ignore\n                        onClick={() => !recording.active && stream.recorder.start()}\n                    >\n                        Start Recording\n                    </button>\n\n                    {recording.active && <p>Recording in progress </p>}\n                    <br />\n                    <br />\n                    <br />\n                    <button\n                        disabled={!recording.active}\n                        onClick={() =>\n                            // @ts-ignore\n                            stream.recorder.stop()}>Stop Recording</button>\n                    {recording.available && <audio controls src={recording.url} />}\n                </div>\n            ) : (\n                <button onClick={checkPermission}>Geta Mic Access</button>\n            )}\n        </div>\n    );\n\n}\n","import * as React from 'react';\nimport { useNavigate } from 'react-router';\n\nimport './App.css'\n\nconst Home = () => {\n\n    let navigate = useNavigate();\n\n    return (\n        <div className=\"App\">\n            <br/>\n            <br/>\n            <br/>\n            <button onClick={() => navigate('/video')}>  Check video</button>\n            <br /> <br /> <br />\n            <button onClick={() => navigate('/audio')}> Check audio</button>\n            <br /> <br /> <br />\n            <button onClick={() => navigate('/playVideo')}> Play video</button>\n            <br /> <br /> <br />\n            <button onClick={() => navigate('/face')}> Detect face</button>\n        </div>\n    )\n}\n\nexport default Home","import * as React from 'react';\nimport ReactPlayer from 'react-player'\n\nimport './App.css'\n\nconst VideoPlayer: React.FC = () => {\n    return ( \n        <div className=\"App\">\n         <ReactPlayer\n            url='https://www.youtube.com/watch?v=GCsxgn4j8ag'\n            controls={true}\n            width=\"680px\"\n            height=\"378px\"\n        />\n        </div>\n     );\n}\n \nexport default VideoPlayer;\n","import * as React from 'react';\n\nimport './App.css'\n\nrequire('tracking')\nrequire('tracking/build/data/face')\n// require('tracking/build/data/eye')\n\nconst FaceReco: React.FC = () => {\n\n    const [imageCaptured, setImageCaptured] = React.useState(false)\n\n    const videoRef = React.useRef(null);\n\n    React.useEffect(() => {\n        captureImage()\n        getVideo()\n    }, [videoRef]);\n\n    const getVideo = () => {\n        navigator.mediaDevices\n            .getUserMedia({ video: { width: 350, height: 350 } })\n            .then(stream => {\n                let video = videoRef.current;\n                // @ts-ignore\n                video.muted = true;\n                // @ts-ignore\n                video.srcObject = stream;\n                // @ts-ignore\n                video.setAttribute('playsinline', '');\n                // @ts-ignore\n                video.play();\n            })\n            .catch(err => {\n                console.error(\"error:\", err);\n            });\n    };\n\n    const captureImage = () => {\n        const videos = document.getElementById('video')\n        const canvas = document.getElementById('canvas')\n        // @ts-ignore\n        const context = canvas.getContext('2d');\n        const tracker = new tracking.ObjectTracker(['face'])\n        tracking.track(\"#video\", tracker, {})\n        tracker.on('track', event => {\n            console.log(event)\n            context.clearRect(0, 0, \"350\", \"350\")\n            event.data.forEach(rect => {\n                console.log(\"react value \", rect)\n                context.strokeStyle = \"#F8E71C\"\n                context.lineWidth = 2     \n                // setTimeout(() => {\n                    context.strokeRect(rect.x,rect.y,\"162\",\"162\")\n                    if(rect.x > 110 && rect.x < 190 && rect.y > 110 && rect.y < 190) {\n                    context.drawImage(videos, 0, 0, \"350\", \"350\");\n                    // @ts-ignore\n                   var dataURI = canvas.toDataURL('image/jpeg');\n                   console.log(dataURI);\n                   tracker.removeAllListeners()\n                // @ts-ignore\n                   setImageCaptured(true)\n                    }\n                //   }, 500);\n            })\n        })\n    }\n\n    return (\n        <div className=\"Container\">\n            <br /><br /><br />\n            <video id=\"video\" ref={videoRef} width=\"350px\" height=\"350px\" />\n            <canvas id=\"canvas\" width=\"350px\" height=\"350px\" />\n        </div>\n    )\n}\n\nexport default FaceReco;\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport VideoRecorder from './deviceCheck'\nimport AudioRecorder from './audioRecorder'\nimport Home from './home';\nimport VideoPlayer from './videoPlayer'\nimport Face from './FaceReco'\n\nconst App = () => {\n\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        <Routes>\n          <Route path=\"/device-test\" element={<Home />} />\n          <Route path=\"/video\" element={<VideoRecorder />} />\n          <Route path=\"/audio\" element={<AudioRecorder />} />\n          <Route path=\"/playVideo\" element={<VideoPlayer />} />\n          <Route path=\"/face\" element={<Face />} />\n        </Routes>\n      </React.Fragment>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}